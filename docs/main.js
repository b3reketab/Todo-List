(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>a});var o=t(537),r=t.n(o),i=t(645),d=t.n(i)()(r());d.push([e.id,"* {\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: .5fr 6fr .5fr;\n    font-family: 'Arial', sans-serif;\n    text-align: center;\n}\n\n#head,\n#footer {\n    background-color: brown;\n    color: white;\n    padding: 8px;\n}\n\n#content {\n    display: grid;\n    grid-template-columns: 1.5fr 5.5fr;\n}\n\n#side-div {\n    height: 100%;\n    border: 1px solid brown;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n}\n\n#project-div {\n    display: flex;\n    flex-direction: column;\n}\n\n\nh3 {\n    padding: 8px;\n    color: #333;\n    text-align: left;\n}\n\nh4 {\n    margin: 8px;\n}\n\nform {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 8px;\n}\n\nbutton {\n    text-align: center;\n    padding: 8px;\n    font-size: 1rem;\n    background-color: brown;\n    color: white;\n}\n\n#button-div{\n    > button {\n        background-color: #4CAF50;\n        color: white;\n        cursor: pointer;\n        border-radius: 25px;\n    }\n}\n\ninput {\n    padding: 8px;\n    width: 200px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n}\n\ninput[type=\"submit\"] {\n    background-color: #4CAF50;\n    color: white;\n    cursor: pointer;\n}\n\ntable {\n    width: 100%;\n    border-collapse: collapse;\n}\n\nth, td {\n    padding: 12px;\n    text-align: left;\n    border-bottom: 1px solid #ddd;\n}\n\n#edit-form,\n#add-form,\n#project-form {\n    display: none;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,aAAa;IACb,aAAa;IACb,0BAA0B;IAC1B,iCAAiC;IACjC,gCAAgC;IAChC,kBAAkB;AACtB;;AAEA;;IAEI,uBAAuB;IACvB,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,kCAAkC;AACtC;;AAEA;IACI,YAAY;IACZ,uBAAuB;IACvB,aAAa;IACb,sBAAsB;IACtB,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;;AAGA;IACI,YAAY;IACZ,WAAW;IACX,gBAAgB;AACpB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,QAAQ;AACZ;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,eAAe;IACf,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI;QACI,yBAAyB;QACzB,YAAY;QACZ,eAAe;QACf,mBAAmB;IACvB;AACJ;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,sBAAsB;IACtB,kBAAkB;AACtB;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,WAAW;IACX,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,6BAA6B;AACjC;;AAEA;;;IAGI,aAAa;AACjB",sourcesContent:["* {\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: .5fr 6fr .5fr;\n    font-family: 'Arial', sans-serif;\n    text-align: center;\n}\n\n#head,\n#footer {\n    background-color: brown;\n    color: white;\n    padding: 8px;\n}\n\n#content {\n    display: grid;\n    grid-template-columns: 1.5fr 5.5fr;\n}\n\n#side-div {\n    height: 100%;\n    border: 1px solid brown;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n}\n\n#project-div {\n    display: flex;\n    flex-direction: column;\n}\n\n\nh3 {\n    padding: 8px;\n    color: #333;\n    text-align: left;\n}\n\nh4 {\n    margin: 8px;\n}\n\nform {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 8px;\n}\n\nbutton {\n    text-align: center;\n    padding: 8px;\n    font-size: 1rem;\n    background-color: brown;\n    color: white;\n}\n\n#button-div{\n    > button {\n        background-color: #4CAF50;\n        color: white;\n        cursor: pointer;\n        border-radius: 25px;\n    }\n}\n\ninput {\n    padding: 8px;\n    width: 200px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n}\n\ninput[type=\"submit\"] {\n    background-color: #4CAF50;\n    color: white;\n    cursor: pointer;\n}\n\ntable {\n    width: 100%;\n    border-collapse: collapse;\n}\n\nth, td {\n    padding: 12px;\n    text-align: left;\n    border-bottom: 1px solid #ddd;\n}\n\n#edit-form,\n#add-form,\n#project-form {\n    display: none;\n}"],sourceRoot:""}]);const a=d},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var d={};if(o)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(d[c]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);o&&d[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),n.push(s))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},d=[],a=0;a<e.length;a++){var c=e[a],l=o.base?c[0]+o.base:c[0],s=i[l]||0,A="".concat(l," ").concat(s);i[l]=s+1;var u=t(A),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var m=r(p,o);o.byIndex=a,n.splice(a,0,{identifier:A,updater:m,references:1})}d.push(A)}return d}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var d=0;d<i.length;d++){var a=t(i[d]);n[a].references--}for(var c=o(e,r),l=0;l<i.length;l++){var s=t(i[l]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}i=c}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),o=t(795),r=t.n(o),i=t(569),d=t.n(i),a=t(565),c=t.n(a),l=t(216),s=t.n(l),A=t(589),u=t.n(A),p=t(426),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=d().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=s(),n()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;const f={Today:[]};let y="Today";class g{constructor(e,n,t,o){this.title=e,this.date=n,this.priority=t,this.isComplete=o}}function C(){const e=document.getElementById("add-title"),n=document.getElementById("add-date"),t=document.getElementById("add-priority"),o=new g(e.value,n.value,t.value,!1);f[b()].push(o),e.value="",n.value="",t.value="",w(f),v()}function I(){const e=document.getElementById("add-name");B(e.value),f[b()]=[],e.value="",w(f),v()}function h(){const[e,n]=document.getElementById("edit-todo").value.split(" ");f[e][n].title=document.getElementById("edit-title").value,f[e][n].date=document.getElementById("edit-date").value,f[e][n].priority=document.getElementById("edit-priority").value,f[e][n].isComplete=document.getElementById("is-complete").checked,w(f),v()}function v(){document.getElementById("add-form").style.display="none",document.getElementById("edit-form").style.display="none",document.getElementById("project-form").style.display="none"}function B(e){y=e}function b(){return y}function x(){document.getElementById("add-form").style.display="block"}function E(){document.getElementById("project-form").style.display="block"}function k(e,n){e.isComplete?n.style.textDecoration="line-through":n.style.textDecoration="none"}function w(e){const n=document.getElementById("project-div"),t=document.getElementById("todos"),o=document.getElementById("project-submit"),r=document.getElementById("add-submit"),i=document.getElementById("edit-submit"),d=document.querySelectorAll("a"),a=document.getElementById("add-todo"),c=document.getElementById("add-project");a.addEventListener("click",x),c.addEventListener("click",E),o.addEventListener("click",I),r.addEventListener("click",C),i.addEventListener("click",h),d.forEach((e=>e.addEventListener("click",v))),n.innerHTML="",t.innerHTML="";for(const t in e){const e=document.createElement("button");e.innerText=t,e.dataset.prop=t,n.appendChild(e)}n.addEventListener("click",(e=>{B(e.target.dataset.prop),w(f)}));const l=b();document.getElementById("project-name").innerText=l,f[l].forEach(((e,n)=>{const o=document.createElement("button");o.innerText="edit",o.addEventListener("click",(()=>{!function(e,n){document.getElementById("edit-title").value=f[e][n].title,document.getElementById("edit-date").value=f[e][n].date,document.getElementById("edit-priority").value=f[e][n].priority,document.getElementById("edit-todo").value=e+" "+n,document.getElementById("is-complete").checked=f[e][n].isComplete,document.getElementById("edit-form").style.display="block"}(l,n)}));const r=document.createElement("button");r.innerText="delete",r.addEventListener("click",(()=>{!function(e,n){f[e].splice(n,1),w(f)}(l,n)}));let i=t.insertRow(),d=i.insertCell(0),a=document.createElement("input");a.type="checkbox",a.checked=e.isComplete,a.addEventListener("click",(n=>{e.isComplete=n.target.checked,k(e,i)})),a.style.height="20px",a.style.width="20px",d.style.width="30px",d.appendChild(a);let c=i.insertCell(1),s=document.createTextNode(`${e.title}`);c.appendChild(s);let A=i.insertCell(2),u=document.createTextNode(`${e.date}`);A.appendChild(u);let p=i.insertCell(3);p.style.width="60px",p.appendChild(o);let m=i.insertCell(4);var y,g;m.style.width="60px",m.appendChild(r),g=i,"high"===(y=e).priority?g.style.backgroundColor="lightcoral":"medium"===y.priority?g.style.backgroundColor="skyBlue":"low"===y.priority?g.style.backgroundColor="lightgreen":g.style.backgroundColor="none",k(e,i)}))}w(f)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,